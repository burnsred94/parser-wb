import { Action, Update } from "nestjs-telegraf";
import { TelegrafContext } from "src/interfaces/telegraf-context.interfaces";
import { StatsService } from "src/modules/stats/stats.service";

@Update()
export class UpdateTrackerPosition {

    constructor(private readonly statsService: StatsService) { }

    @Action('track_position')
    async trackPosition(ctx: TelegrafContext) {

        await this.statsService.stats({
            track_position_button: 1
        })

        await ctx.reply(`<b>–°–∏–ª—å–Ω–æ –∂–¥–µ—à—å –Ω–∞—à–µ–≥–æ —Ä–µ–ª–∏–∑–∞ –ö–ª—é—á–µ–º–µ—Ä–∞ –ø–æ–∑–∏—Ü–∏–π?</b>\n\n–í—Å–µ –±—É–¥–µ—Ç —Å–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ –∞, –ø–æ–∫–∞ —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –≤ –Ω–∞—à–µ–º –∫–∞—Ç–∞–ª–æ–≥–µ <a href='https://t.me/sellershub_bot'>SellersHub Bot –ö–∞—Ç–∞–ª–æ–≥</a>`,
            {
                parse_mode: 'HTML',
                reply_markup: {
                    inline_keyboard: [
                        [{ text: "ü§ñ –ë–æ—Ç –ö–∞—Ç–∞–ª–æ–≥–∞ SellersHub", url: "https://t.me/sellershub_bot" }],
                        [{ text: "üìã –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data: "start" }, { text: "ü§ù –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data: "support" }]
                    ]
                }
            })
    }
}