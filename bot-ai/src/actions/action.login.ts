import { Action, Ctx, Update } from "nestjs-telegraf";
import { TelegrafContext } from "src/interfaces/telegraf-context.interfaces";
import { Action as ActionState } from "src/interfaces/telegraf-context.interfaces";
import { SessionsService } from "src/modules/sessions/sessions.service";


@Update()
export class UpdateLogin {

  constructor(private readonly sessionService: SessionsService) { }

  @Action("login")
  async register(@Ctx() ctx: TelegrafContext) {
    const { id } = ctx.from

    const state = { state: ActionState.LOGIN }
    await this.sessionService.updateOne(id, state)
    await ctx.sendMessage('–ï—Å–ª–∏ –≤—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ SellersHub\n–í—ã –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –Ω–∏–∂–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏\n\nEmail:\n<i>exemple@mail.to</i>\n\nPassword:\n<i>eXEMp1ePa11w0rD</i>',
      {
        parse_mode: 'HTML',
      }
    );
    setTimeout(async () => {
      await ctx.sendMessage('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∏–º–µ–π–ª –Ω–∏–∂–µ üëá')
    }, 1500)
  }
}