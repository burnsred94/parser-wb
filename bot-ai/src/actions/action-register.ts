import { Action, Ctx, Update } from "nestjs-telegraf";
import { Action as ActionState, StatusUserBot, TelegrafContext } from "src/interfaces/telegraf-context.interfaces";
import { Action as ActionEnum } from "src/interfaces/telegraf-context.interfaces";
import { SessionsService } from "src/modules/sessions/sessions.service";


@Update()
export class UpdateRegister {

  constructor(private readonly sessionService: SessionsService) {}

    @Action("register")
        async register(@Ctx() ctx: TelegrafContext) {
          const {id} = ctx.from

        const state = {state: ActionState.REGISTER}
        const stateUp = await this.sessionService.updateOne(id, state)

        if(stateUp) {
          await ctx.sendMessage('<i>–í–∞—à–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ–π, —Ç–∞–∫ –∫–∞–∫ –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –µ–µ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</i>\n\n<b>–í–≤–µ–¥–∏—Ç–∏–µ –≤–∞—à email</b> üëá', { parse_mode: 'HTML' });
        }
  }
}